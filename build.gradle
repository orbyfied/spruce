buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        // required to publish to maven central
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.8.0'
    }
}

// plugins
plugins {
    id 'java' // for building java
    id 'cpp'  // for building natives
}

// apply plugins
apply plugin: 'java'
apply plugin: 'cpp'

// project info
group 'io.github.orbyfied'
version '2.0.1'

sourceCompatibility = 13
targetCompatibility = 13

// JAR task config
jar {
    // enable the task
    enabled true

    // make sure that the DLLs are built
    dependsOn 'win32X64SharedLibrary', 'win32X86SharedLibrary'

    /* include resources */

    // win32 DLLs (x64/x86)
    from("build/libs/win32/shared/x64") { include("*.dll") duplicatesStrategy DuplicatesStrategy.EXCLUDE }
    from("build/libs/win32/shared/x86") { include("*.dll") duplicatesStrategy DuplicatesStrategy.EXCLUDE }
}

// natives
model {
    // supported architectures
    platforms {
        x86 {
            architecture "x86"
        }
        x64 {
            architecture "x86_64"
        }
    }

    components {
        // Win32 library (Spruce.Win32)
        win32(NativeLibrarySpec) {
            // target platforms
            targetPlatform "x86"
            targetPlatform "x64"

            // DLL info
            String v_baseName = "spruce-win32"
            String v_version  = "1_3"
            String v_arch     = "64"

            String v_name = v_baseName + "-v" + v_version + "_" + v_arch
            setBaseName(v_name)

            // describe binaries (DLL)
            binaries.all {

                // linker params
                linker.args '--kill-at'

                if (v_arch == "64") {
                    cppCompiler.args '-m64'
                    linker.args '-m64'
                }

                linker.args '-shared'
                linker.args '-flinker-output=dyn'

                // include JNI headers
                cppCompiler.args "-I${buildDir}/generated/sources/headers/java/main/"

                // check if target is Windows
                if (targetPlatform.operatingSystem.windows) {
                    // add JNI includes
                    cppCompiler.args "-I${org.gradle.internal.jvm.Jvm.current().javaHome}/include"
                    cppCompiler.args "-I${org.gradle.internal.jvm.Jvm.current().javaHome}/include/win32"

                    // add more linker parameters
                    linker.args "Shlwapi.lib", "Advapi32.lib"
                }
            }
        }
    }
}
dependencies {

}